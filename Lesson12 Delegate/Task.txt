Задание 1. Игра «Автомобильные гонки». 
Разработать игру "Автомобильные гонки" с использованием делегатов.
1.	В игре использовать несколько типов автомобилей: спортивные, легковые, грузовые и автобусы.
2.	Реализовать игру «Гонки». Принцип  игры: Автомобили двигаются от старта к финишу со скоростями, которые изменяются в установленных пределах случайным образом.
Победителем считается автомобиль, пришедший к финишу первым

Рекомендации по выполнению работы
1.	Разработать абстрактный класс «автомобиль» (класс Car). Собрать в нем все общие поля, свойства (например, скорость) методы (например, ехать).
2.	Разработать классы автомобилей с конкретной реализацией конструкторов и методов. Реализовать метод, позволяющий выводить сообщения о текущем положении автомобиля. 
3.	Класс игры должен выставлять всех участников гонок на старт (с использованием делегата), производить запуск соревнований автомобилей (с использованием делегата),
выводить сообщение об автомобиле, победившем в гонках. Создать делегаты, обеспечивающие вызов методов из классов автомобилей (например, выйти на старт, начать гонку). 
4.	Игра заканчивается, когда какой-то из автомобилей проехал определенное расстояние (старт в положении  0, финиш в положении 100).
Реализовать уведомление об окончании гонки (прибытии какого-либо автомобиля на финиш).


Задание 2.  Изменение свойств объекта класса 
Создать интерфейс, который уведомляет пользователя программы об изменении значений свойства в классе 
(в котором реализуется данный интерфейс). Сигнатура интерфейса:
    interface IPropertyChanged
    {
         event PropertyEventHandler PropertyChanged;
    }

Делегат имеет следующий вид:
public delegate void PropertyEventHandler
                              (object sender, PropertyEventArgs e);
где, в качестве дополнительного параметра (PropertyEventArgs) выступает имя изменённого свойства.
В методе Main() проверить работоспособность созданного интерфейса.

Задание 3.  Чат, основанный на событиях 
Создать приложение, имитирующее  рассылку сообщений пользователям виртуального чата. 
При отправке сообщения одним из пользователей, другие пользователи получают данное сообщение с помощью события 
(при этом фиксируется дата и время получения сообщения). При прочтении сообщения пользователем фиксируется данный факт 
(время и дата) и  другие пользователи чата узнают об этом  с применением событий. 
Требования: необходимо создать классы «Сообщение», «Пользователь», «Чат» и другие классы по необходимости.
